/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as MedicationIndexImport } from './routes/medication/index'
import { Route as MedicationIdImport } from './routes/medication/$id'
import { Route as MedicationDistIndexImport } from './routes/medication/dist/index'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MedicationIndexRoute = MedicationIndexImport.update({
  id: '/medication/',
  path: '/medication/',
  getParentRoute: () => rootRoute,
} as any)

const MedicationIdRoute = MedicationIdImport.update({
  id: '/medication/$id',
  path: '/medication/$id',
  getParentRoute: () => rootRoute,
} as any)

const MedicationDistIndexRoute = MedicationDistIndexImport.update({
  id: '/medication/dist/',
  path: '/medication/dist/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/medication/$id': {
      id: '/medication/$id'
      path: '/medication/$id'
      fullPath: '/medication/$id'
      preLoaderRoute: typeof MedicationIdImport
      parentRoute: typeof rootRoute
    }
    '/medication/': {
      id: '/medication/'
      path: '/medication'
      fullPath: '/medication'
      preLoaderRoute: typeof MedicationIndexImport
      parentRoute: typeof rootRoute
    }
    '/medication/dist/': {
      id: '/medication/dist/'
      path: '/medication/dist'
      fullPath: '/medication/dist'
      preLoaderRoute: typeof MedicationDistIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/medication/$id': typeof MedicationIdRoute
  '/medication': typeof MedicationIndexRoute
  '/medication/dist': typeof MedicationDistIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/medication/$id': typeof MedicationIdRoute
  '/medication': typeof MedicationIndexRoute
  '/medication/dist': typeof MedicationDistIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/medication/$id': typeof MedicationIdRoute
  '/medication/': typeof MedicationIndexRoute
  '/medication/dist/': typeof MedicationDistIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/medication/$id'
    | '/medication'
    | '/medication/dist'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/medication/$id' | '/medication' | '/medication/dist'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/medication/$id'
    | '/medication/'
    | '/medication/dist/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  MedicationIdRoute: typeof MedicationIdRoute
  MedicationIndexRoute: typeof MedicationIndexRoute
  MedicationDistIndexRoute: typeof MedicationDistIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  MedicationIdRoute: MedicationIdRoute,
  MedicationIndexRoute: MedicationIndexRoute,
  MedicationDistIndexRoute: MedicationDistIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/medication/$id",
        "/medication/",
        "/medication/dist/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/medication/$id": {
      "filePath": "medication/$id.tsx"
    },
    "/medication/": {
      "filePath": "medication/index.tsx"
    },
    "/medication/dist/": {
      "filePath": "medication/dist/index.js"
    }
  }
}
ROUTE_MANIFEST_END */
